server:
  port: 8088

eureka:
  client:
    service-url:
       defaultZone: http://localhost:8081/eureka/  #代表注册到eureka服务端的地址
spring:
  application:
    name: service
  datasource:
    primary:
      jdbc-url: jdbc:oracle:thin:@127.0.0.1:1521:ORCL
      username: gkh
      password: 123456
      driver-class-name: oracle.jdbc.driver.OracleDriver
      type: com.alibaba.druid.pool.DruidDataSource  #使用druid连接池
      #url: jdbc:oracle:thin:@127.0.0.1:1521:ORCL
      #type: oracle.jdbc.pool.OracleDataSource
    secondary:
      jdbc-url: jdbc:oracle:thin:@127.0.0.1:1521:ORCL
      username: gkh
      password: 123456
      driver-class-name: oracle.jdbc.driver.OracleDriver
      type: com.alibaba.druid.pool.DruidDataSource #使用druid连接池

    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 15
    maxWait: 60000  # 配置获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    maxPoolPreparedStatementPerConnectionSize: 20 # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,config
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    useGlobalDataSourceStat: true  #合并多个DruidDataSource的监控数据
    druid:
      remove-abandoned: true
      remove-abandoned-timeout: 180
      log-abandoned: true
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    lettuce:
      pool:
        max-active: 8  # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-wait: -1ms  # 连接池最大阻塞等待时间,单位毫秒（使用负值表示没有限制） 默认 -1
        max-idle: 8  # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 2000ms #连接超时时间
  #热部署
  devtools:
    restart:
      enabled: true #热部署开关
  thymeleaf:
    mode: HTML5
    encoding: UTF-8
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    servlet:
      content-type: text/html

# MyBatis配置
mybatis:
  # 搜索指定包别名
  type-aliases-package: com.gkh.springboot.entity
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapper-locations: classpath:com/gkh/springboot/mapper/*.xml
  # 加载全局的配置文件
  config-location: classpath:mybatis-config.xml

# PageHelper分页插件
pagehelper:
  helperDialect: oracle
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

